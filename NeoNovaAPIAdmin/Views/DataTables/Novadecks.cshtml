@using NeoNovaAPIAdmin.Models.DbModels;
@{
}

@model List<Novadeck>

<div class="text-center">
    <h1 class="display-4">Novadecks Page</h1>
    <p>These are the Novadecks</p>
    <button class="btn btn-success newButton" data-form="newForm">New +</button>
</div>
<div id="newFormDiv">
    <form id="newForm" class="newForm" action="@Url.Action("AddNovadeck")" method="post" style="display: none;">
        <table>
            <tr>
                <td><input type="text" name="Term" placeholder="Term" required /></td>
            </tr>
            <tr>
                <td><input type="text" name="TermDefinition" placeholder="Term Definition" required /></td>
            </tr>
            <tr>
                <td><input type="checkbox" name="IsPinned" /> Is Pinned</td>
            </tr>
            <tr>
                <td>
                    <button type="submit" class="btn btn-primary">Add</button>
                    <button type="button" class="btn btn-danger cancelButton">Cancel</button>
                </td>
            </tr>
        </table>
    </form>
</div>

@if (Model != null && Model.Any())
{
    <table class="table" id="novadecksTable">
        <thead>
            <tr>
                <th>Term</th>
                <th>Term Definition</th>
                <th>Is Pinned</th>
                <th style="min-width: 300px;">Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var novadeck in Model)
            {
                <tr>
                    <td>
                        <span class="text">@novadeck.Term</span>
                        <input type="text" class="form-control edit" value="@novadeck.Term" style="display:none;" />
                    </td>
                    <td>
                        <span class="text">@novadeck.TermDefinition</span>
                        <input type="text" class="form-control edit" value="@novadeck.TermDefinition" style="display:none;" />
                    </td>
                    <td>
                        <span class="text">@novadeck.IsPinned</span>
                        <input type="checkbox" class="form-control edit" @(Convert.ToBoolean(novadeck.IsPinned) ? "checked" : "") style="display:none;" />
                    </td>
                    <td>
                        <div class="action-buttons">
                            <div class="button-row">
                                <button type="button" class="btn btn-primary editBtn">Edit</button>
                            </div>
                            <div class="edit-actions button-row" style="display:none;">
                                <button type="submit" class="btn btn-success saveBtn">Save</button>
                                <button type="button" class="btn btn-danger cancelBtn">Cancel</button>
                            </div>
                            <div class="button-row">
                                <button type="button" class="btn btn-danger deleteBtn" data-url="@Url.Action("DeleteNovadeck", new { id = novadeck.Id })">Delete</button>
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No Novadecks found.</p>
}